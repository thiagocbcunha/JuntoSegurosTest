version: '3.8'

services:
  elasticsearch:
    build:
      context: Elastic/
      args:
        STACK_VERSION: $STACK_VERSION
    image: elasticsearch
    container_name: elasticsearch
    # healthcheck:
    #   test: ["CMD-SHELL", "curl -u elastic:${ELASTIC_PASSWORD} -s http://elasticsearch:${ELASTIC_PORT}/_cluster/health?wait_for_status=yellow&timeout=500ms"]
    #   retries: 300
    #   interval: 1s
    volumes:
      - type: bind
        source: ./Elastic/config/elasticsearch.yml
        target: /usr/share/Elastic/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: elasticsearch
        target: /usr/share/Elastic/data
    ports:
      - "${ELASTIC_PORT}:9200"
      # - "9300:9300"
    environment:
      - ELASTIC_PORT=${ELASTIC_PORT}
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      # ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
    mem_limit: ${MEM_LIMIT}

  kibana:
    build:
      context: Kibana/
      args:
        STACK_VERSION: $STACK_VERSION
    image: kibana
    container_name: kibana
    # healthcheck:
    #   test: ["CMD-SHELL", "curl -u elastic:${ELASTIC_PASSWORD} -s http://kibana:${KIBANA_PORT}/api/status | grep 'All services are available'"]
    #   retries: 300
    #   interval: 1s
    volumes:
      - type: bind
        source: ./Kibana/config/kibana.yml
        target: /usr/share/Kibana/config/kibana.yml
        read_only: true
    environment:
      KIBANA_SERVER_NAME: "kibana"
      KIBANA_PORT: ${KIBANA_PORT}
      # KIBANA_USERNAME: ${KIBANA_USERNAME}
      # KIBANA_PASSWORD: ${KIBANA_PASSWORD}
      ELASTIC_SERVER: "http://elasticsearch:${ELASTIC_PORT}"
    ports:
      - "${KIBANA_PORT}:5601"
    mem_limit: ${MEM_LIMIT}
    depends_on:
      - elasticsearch

  # logstash:
  #   build:
  #     context: Logstash/
  #     args:
  #       STACK_VERSION: $STACK_VERSION
  #   image: logstash
  #   container_name: logstash
  #   volumes:
  #     - type: bind
  #       source: ./Logstash/config/logstash.yml
  #       target: /usr/share/Logstash/config/logstash.yml
  #       read_only: true
  #     - type: bind
  #       source: ./Logstash/pipeline
  #       target: /usr/share/Logstash/pipeline
  #       read_only: true
  #   ports:
  #     - "5044:5044"
  #     - "9600:9600"
  #   environment:
  #     ELASTIC_SERVER: "http://elasticsearch:${ELASTIC_PORT}"
  #     LOGSTASH_USERNAME: ${LOGSTASH_USERNAME}
  #     LOGSTASH_PASSWORD: ${LOGSTASH_PASSWORD}

  #   depends_on:
  #     - elasticsearch

volumes:
  elasticsearch:
    name: elasticsearch